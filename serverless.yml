service: serverless-secrets

plugins:
  - serverless-iam-roles-per-function
  - serverless-kms-secrets
  - serverless-pseudo-parameters


provider:
  name: aws
  runtime: python3.7
  region: ${opt:region, 'us-west-2'}
  stage:  ${opt:stage, 'dev'}


functions:
  deploytime-env-var-plaintext: # NOT RECOMMENDED (Not encrypted in CF)
    handler: envvar.handler
    environment:
      SECRETKEY: ${env:SECRETKEY}

  deploytime-env-var-ciphertext: # Secure
    handler: kms.handler
    environment:
      ENCRYPTED_SECRETKEY: AQICAHh429eYwvaw/MRcoBXJA3ZIzfZyHO5u4cZeDSlMNJdN8wFvQCBWjyFPWzzHsOXPiKxCAAAAZjBkBgkqhkiG9w0BBwagVzBVAgEAMFAGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQM1M3h1hp78u5K+0nNAgEQgCPyGN2+YTfb+G9bwnGRCQx0v+MaqNrhKoXOp+8J3tYhnyZFDQ==. ## Generated by calling KMS Encrypt API

    iamRoleStatements:  ## Give Lambda permission to call KMS Decrypt at run time.
      -
        Effect: Allow
        Action:
          - 'kms:Decrypt' 
        Resource: !GetAtt ServerlessDemoKey.Arn

  deploytime-ssm-plaintext: # NOT RECOMMENDED (Not encrypted in CF)
    handler: envvar.handler
    environment:
      SECRETKEY: ${ssm:/my/path/to/secretkey~true}

  deploytime-ssm-ciphertext: # Secure, but complicated
    handler: kms.handler
    environment:
      ENCRYPTED_SECRETKEY: "${ssm:/my/path/to/secretkey~false}"
      SECRETKEY_ARN: "arn:aws:ssm:${self:provider.region}:920535593515:parameter/my/path/to/secretkey"
    iamRoleStatements:
      -
        Effect: Allow
        Action:
          - 'kms:Decrypt'
        Resource: !GetAtt ServerlessDemoKey.Arn

  runtime-ssm: # Secure
    handler: parameterstore.handler
    environment:
      SSM_PATH_TO_SECRETKEY: /my/path/to/secretkey
    iamRoleStatements:
      -  
        Effect: Allow
        Action:
          - ssm:GetParameter
        Resource: 'arn:aws:ssm:${self:provider.region}:*:parameter/my/path/to/secretkey'
      -
        Effect: Allow
        Action:
          - 'kms:Decrypt'
        Resource: !GetAtt ServerlessDemoKey.Arn


  deploytime-secrets-manager: # NOT RECCOMENDED (Not encrypted in CF)
    handler: envvar.handler
    environment:
      SECRETKEY: ${ssm:/aws/reference/secretsmanager/path/to/secretkey~true}


  runtime-secrets-manager: # Secure
    handler: parameterstore.handler
    environment:
      SSM_PATH_TO_SECRETKEY: /aws/reference/secretsmanager/path/to/secretkey
    iamRoleStatements:
          -  
            Effect: Allow
            Action:
              - ssm:GetParameter
            Resource: 'arn:aws:ssm:${self:provider.region}:*:parameter/aws/reference/secretsmanager/path/to/secretkey'
          -
            Effect: Allow
            Action:
              - 'kms:Decrypt'
            Resource: !GetAtt ServerlessDemoKey.Arn
          -
            Effect: Allow
            Action:
              - 'secretsmanager:GetSecretValue'
            Resource: arn:aws:secretsmanager:${self:provider.region}:*:secret:path/to/secretkey*
resources:
  Resources:
    ServerlessDemoKeyAlias:
      Type: AWS::KMS::Alias
      Properties:
        AliasName: 'alias/ServerlessDemoKey'
        TargetKeyId: !Ref ServerlessDemoKey

    ServerlessDemoKey:
      Type: AWS::KMS::Key
      Properties:
        Description: 'Encryption key for secret config values'
        Enabled: True
        EnableKeyRotation: False
        KeyPolicy:
          Version: '2012-10-17'
          Id: 'key-default-1'
          Statement:
            -
              Sid: 'Allow administration of the key & encryption of new values'
              Effect: Allow
              Principal:
                AWS:
                  - !Join 
                      - ''
                      - - 'arn:aws:iam::'
                        - !Ref AWS::AccountId
                        - ':user/danny'
                  - !Join 
                      - ''
                      - - 'arn:aws:iam::'
                        - !Ref AWS::AccountId
                        - ':root'
              Action:
                - 'kms:Create*'
                - 'kms:Encrypt'
                - 'kms:Decrypt'
                - 'kms:Describe*'
                - 'kms:Enable*'
                - 'kms:List*'
                - 'kms:Put*'
                - 'kms:Update*'
                - 'kms:Revoke*'
                - 'kms:Disable*'
                - 'kms:Get*'
                - 'kms:Delete*'
                - 'kms:ScheduleKeyDeletion'
                - 'kms:CancelKeyDeletion'
                - 'kms:GenerateDataKey'
              Resource: '*'